{"version":3,"file":"static/js/801.e0c0b9ac.chunk.js","mappings":"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","sources":["pages/addTaskForm.jsx","pages/allTasks.jsx","pages/dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { Button } from \"@mui/material\";\nimport axios from \"axios\";\n\nexport default function AddTaskForm() {\n\n    const [title,setTitle] = useState(\"\");\n    const [description,setDescription] = useState(\"\");\n    const [errorHandle,setError] = useState(null)\n\n    var user = JSON.parse(localStorage.getItem('activeUser'));\n\n    function addTask(){\n        // axios.post(\"http://localhost:5000/api/v1/tasks\",{\n        axios.post(\"https://firstnodedeployment.herokuapp.com/api/v1/tasks\",{\n            title: title,\n            description: description,\n            user: user.id,\n            ownerID: user.id\n        }).then((response)=>{\n            console.log(response.data.message);\n        }).catch((error)=>{\n            setError(error.message)\n        })\n        setTitle(\"\");\n        setDescription(\"\");\n    }\n    \n    function refreshPage() {\n        window.location.reload(false);\n      }\n\n    const isInvalid = title === '' || description === '';\n\n  return (\n    <Box\n    sx={{\n        border: \"none\",\n        width: {xs: \"80%\", md: \"60%\"},\n        padding: {xs: \"1rem\", md: \"2rem\"},\n        margin: \"auto\",\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        rowGap: \"1rem\",\n        marginTop: \"2rem\",\n        borderRadius: \"2rem\",\n        boxShadow: \"1rem 1rem 10px 0px #3c8db2\"\n    }}\n    >\n    <Typography variant=\"h4\" gutterBottom component=\"div\">\n        Add Task\n    </Typography>\n    {errorHandle && <p style={{color:\"red\"}}>{errorHandle}</p>}\n        <TextField\n            required\n            id=\"outlined-required\"\n            className=\"titlelInput\"\n            label=\"Task title\"\n            value={title}\n            onChange={({target})=>setTitle(target.value)}\n            sx={{margin: \"auto\",width: { xs: '100%', md: '50%' }}}\n        />\n        <TextField\n            id=\"outlined-multiline-static\"\n            label=\"Description\"\n            required\n            multiline\n            rows={4}\n            className=\"descriptionlInput\"\n            value={description}\n            onChange={({target})=>setDescription(target.value)}\n            sx={{margin: \"auto\",width: { xs: '100%', md: '50%' }}}\n        />\n        <Button disabled={isInvalid} sx={{margin: \"auto\",width: { xs: '60%', md: '40%' }}} variant=\"contained\" onClick={()=>{\n            addTask();\n            setTimeout(refreshPage,2000)\n            }}>Add Task</Button>\n    </Box>\n  )\n}\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport \"./allTasks.css\";\n\nimport Box from '@mui/material/Box';\n\nimport { Button } from \"@mui/material\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CheckIcon from '@mui/icons-material/Check';\n\n\nexport default function AllTasks() {\n\n    var user = JSON.parse(localStorage.getItem('activeUser'));\n\n    const [title,setTitle] = useState(\"\");\n    const [description,setDescription] = useState(\"\");\n    const [errorHandle,setError] = useState(null)\n\n    const [userTasks,setData] = useState([])\n\n    function getTasks(){\n        axios.get(\"https://firstnodedeployment.herokuapp.com/api/v1/tasks/byUser\",{\n            headers: {\n                ownerid: user.id\n            }\n        }).then((response)=>{\n            console.log(response.data.message);\n            setData(response.data.data)\n        }).catch((error)=>{\n            setError(error.message)\n        })\n    }\n\n    // X stands for the task id (ObjID / _id: in Mongodb) when I \".map\" all the tasks to elemnets\n    function deleteTasks(x){\n        \n        axios.delete(\"https://firstnodedeployment.herokuapp.com/api/v1/tasks/byUser\",{\n            headers: {\n                taskid: x\n            }\n        }).then((response)=>{\n            console.log(response.data.message);\n            getTasks();\n        }).catch((error)=>{\n            setError(error.message)\n        })\n    }\n\n    function updateTaskTitle(x){\n        axios.put(\"https://firstnodedeployment.herokuapp.com/api/v1/tasks/byUser\",{},{\n            headers: {\n                taskid: x,\n                newtitle: title\n            }\n        }).then((response)=>{\n            console.log(response.data.message);\n            getTasks();\n        }).catch((error)=>{\n            setError(error.message)\n        })\n    }\n\n    function updateTaskDesc(x){\n        axios.put(\"https://firstnodedeployment.herokuapp.com/api/v1/tasks/byUser\",{},{\n            headers: {\n                taskid: x,\n                newdesc: title\n            }\n        }).then((response)=>{\n            console.log(response.data.message);\n            getTasks();\n        }).catch((error)=>{\n            setError(error.message)\n        })\n    }\n\n    useEffect(() => {\n        getTasks();\n    },[]);\n\n\n    //Here should be the original Value\n    const [originalValue, setOriginalValue] = useState(\"\");\n\n    const onChange = (event) => {\n        setTitle(event.target.value)\n    }\n\n\n    // Here will only unblur the element\n    const onKeyDown = (event) => {\n        if (event.key === \"Enter\") {\n          event.target.blur();\n        }\n        if (event.key === \"Escape\"){\n            event.target.value = originalValue;\n            event.target.blur();\n        }\n    }\n    \n    const onBlur = (event) => {\n        if (event.target.value.trim() === \"\") {\n            //Revert back to original Value if input is empty\n            event.target.value = originalValue;\n            setTitle(originalValue)\n        } else {\n        //   console.log(title);\n        }\n    }\n\n    const onFocus = (event) => {\n        setOriginalValue(event.target.value)\n    }\n\n    const onInput = (event) => {\n        if (event.target.scrollHeight > 33) { \n            event.target.style.height = \"5px\";\n            event.target.style.height = (event.target.scrollHeight - 16) + \"px\";\n        }\n    }\n    \n  return (\n    <Box\n    sx={{\n        border: \"2px black solid\",\n        width: {xs: \"85%\", sm: \"70\" ,md: \"70%\"},\n        padding: {xs: \"1rem\",sm: \"1rem\", md: \"2rem\"},\n        margin: \"auto\",\n        display: \"grid\",\n        gridTemplateColumns: {xs: \"1fr\",sm: \"1fr\" , md: \"1fr 1fr\"},\n        rowGap: \"1rem\",\n        columnGap: \"1rem\",\n        marginTop: \"2rem\",\n        borderRadius: \"1rem\",\n        marginBottom: \"2rem\"\n    }}\n    >\n    {userTasks.map((task, index) => (\n    <Fragment key={index}>\n    <Card sx={{ minWidth: 275 }} id={task._id}>\n    <CardContent>\n        <input \n        className=\"changeInput\"\n        type=\"text\"\n        aria-label=\"Field name\"\n        defaultValue={task.title}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        onBlur={(e)=>{\n            onBlur(e);\n            if(e.target.value !== originalValue){\n                updateTaskTitle(task._id)\n            }\n        }}\n        onFocus={onFocus}\n        style={{width: \"80%\"}}\n        >\n        </input>\n\n        <textarea \n        rows={4}\n        className=\"changeInput\"\n        type=\"text\"\n        aria-label=\"Field name\"\n        defaultValue={task.description}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        onBlur={(e)=>{\n            onBlur(e);\n            if(e.target.value !== originalValue){\n                updateTaskDesc(task._id)\n            }\n        }}\n        onFocus={onFocus}\n        onInput={onInput}\n        style={{width: \"80%\"}}\n        >\n        </textarea>\n\n    </CardContent>\n\n    <CardActions>\n    <Button size=\"small\" onClick={()=>{\n            // console.log(\"Check Task\");\n        }}>\n            <CheckIcon size=\"small\"></CheckIcon>\n        </Button>\n\n        <Button size=\"small\" onClick={()=>{\n            // console.log(\"Delete Task\");\n            deleteTasks(task._id);\n        }}>\n            <DeleteIcon size=\"small\"></DeleteIcon>\n        </Button>\n\n    </CardActions>\n    </Card>\n    </Fragment>\n    ))}\n    {userTasks.length === 0 && <h2 style={{margin: \"auto\",textAlign: \"center\"}}>No Tasks</h2>}\n    </Box>\n  )\n}\n","import React, { Fragment, useEffect } from \"react\";\nimport * as ROUTES from '../constants/routes';\nimport { useNavigate } from \"react-router-dom\";\nimport \"./dashboard.css\";\n\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\n\nimport AddTaskForm from \"./addTaskForm\";\nimport AllTasks from \"./allTasks\";\n\nconst pages = ['To Do'];\nconst settings = ['Logout'];\n\nexport default function Dashboard() {\n\n  const navigate = useNavigate();\n  var user = JSON.parse(localStorage.getItem('activeUser'));\n\n\n  useEffect(() => {\n    if (!user){\n      setTimeout(navigate(ROUTES.LOGIN),2000);\n    }\n  },[user]);\n\n\n  function logout(){\n    localStorage.removeItem('activeUser');\n    localStorage.removeItem('userToken');\n    navigate(ROUTES.LOGIN)\n  }\n\n\n  // ------------>> React MUI App Bar <<------------\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n// ------------>> React MUI App Bar <<------------\n\n  if(user){\n  return (\n    <Fragment>\n    <AppBar position=\"static\">\n    <Container maxWidth=\"xl\">\n      <Toolbar disableGutters>\n        <Typography\n          variant=\"h6\"\n          noWrap\n          component=\"div\"\n          sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n        >\n          Dunder Mifflin Inc.\n        </Typography>\n\n        {/* This section will render only on small screen -  MENU side icon/bar */}\n        <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n          <IconButton\n            size=\"large\"\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={handleOpenNavMenu}\n            color=\"inherit\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorElNav}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            open={Boolean(anchorElNav)}\n            onClose={handleCloseNavMenu}\n            sx={{\n              display: { xs: 'block', md: 'none' },\n            }}\n          >\n            {pages.map((page) => (\n              <MenuItem key={page} onClick={handleCloseNavMenu}>\n                <Typography textAlign=\"center\">{page}</Typography>\n              </MenuItem>\n            ))}\n          </Menu>\n        </Box>\n        <Typography\n          variant=\"h6\"\n          noWrap\n          component=\"div\"\n          sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n        >\n          {user.name}\n        </Typography>\n       {/* This section will render only on small screen -  MENU side icon/bar */}\n\n\n        <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n          {pages.map((page) => (\n            <Button\n              key={page}\n              onClick={handleCloseNavMenu}\n              sx={{ my: 2, color: 'white', display: 'block' }}\n            >\n              {page}\n            </Button>\n          ))}\n        </Box>\n\n\n        <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n        <Typography\n          variant=\"h6\"\n          noWrap\n          component=\"div\"\n          sx={{margin:\"auto\", flexGrow: 1, display: { xs: 'none', md: 'flex' } }}\n        >\n          {user.name}\n        </Typography>\n        </Box>\n\n        <Box sx={{ flexGrow: 0 }}>\n          <Tooltip title=\"Open settings\">\n            <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n              <Avatar alt={user.name} src=\"#\" />\n            </IconButton>\n          </Tooltip>\n          <Menu\n            sx={{ mt: '45px' }}\n            id=\"menu-appbar\"\n            anchorEl={anchorElUser}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            open={Boolean(anchorElUser)}\n            onClose={handleCloseUserMenu}\n          >\n            {settings.map((setting) => (\n              <MenuItem key={setting} onClick={(e)=>{\n                handleCloseUserMenu();\n                //Logout functionality here\n                if (e.target.textContent === \"Logout\") {\n                  // console.log(\"Should logout here\");\n                  logout();\n                }\n                }}>\n                <Typography textAlign=\"center\">{setting}</Typography>\n              </MenuItem>\n            ))}\n          </Menu>\n        </Box>\n      </Toolbar>\n    </Container>\n  </AppBar>\n\n  <AddTaskForm />\n  <AllTasks />\n  </Fragment>\n  )}\n\n  return (\n    <h3 style={{textAlign: \"center\",margin: \"auto\",justifyContent: \"center\"}}>Loading Dashboard</h3>\n  )\n}"],"names":["AddTaskForm","useState","title","setTitle","description","setDescription","errorHandle","setError","user","JSON","parse","localStorage","getItem","refreshPage","window","location","reload","isInvalid","Box","sx","border","width","xs","md","padding","margin","textAlign","justifyContent","display","flexDirection","rowGap","marginTop","borderRadius","boxShadow","Typography","variant","gutterBottom","component","style","color","TextField","required","id","className","label","value","onChange","target","multiline","rows","Button","disabled","onClick","axios","ownerID","then","response","console","log","data","message","catch","error","setTimeout","AllTasks","userTasks","setData","getTasks","headers","ownerid","useEffect","originalValue","setOriginalValue","event","onKeyDown","key","blur","onBlur","trim","onFocus","onInput","scrollHeight","height","sm","gridTemplateColumns","columnGap","marginBottom","map","task","index","Fragment","Card","minWidth","_id","CardContent","type","defaultValue","e","x","taskid","newtitle","newdesc","CardActions","size","Check","Delete","length","pages","settings","Dashboard","navigate","useNavigate","ROUTES","React","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","handleCloseNavMenu","handleCloseUserMenu","AppBar","position","Container","maxWidth","Toolbar","disableGutters","noWrap","mr","flexGrow","IconButton","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","page","MenuItem","name","my","Tooltip","p","Avatar","alt","src","mt","setting","textContent","removeItem"],"sourceRoot":""}